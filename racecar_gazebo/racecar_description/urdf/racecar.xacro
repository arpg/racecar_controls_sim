<?xml version="1.0"?>
<robot name="racecar" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find racecar_description)/urdf/macros.xacro" />

  <!-- Add chassis and it's inertia link -->

  <link name="base_link" />

  <link name="chassis">
    <visual>
      <xacro:chassis_geometry/>
      <material name="blue" />
    </visual>
  </link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 0.05" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="chassis" />
  </joint>

  <link name="chassis_inertia">
    <inertial>
      <xacro:chassis_inertial_params />
    </inertial>
  </link>

  <joint name="chassis_inertia_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis" />
    <child link="chassis_inertia" />
  </joint>

  <!-- Add the left rear wheel with its joints and tranmissions -->

  <link name="left_rear_wheel">
    <inertial>
      <xacro:left_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:left_rear_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>robot
      <xacro:left_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="left_rear_wheel_joint" type="continuous">
    <origin xyz="0 0.1 0" rpy="1.5708 0 0" />
    <parent link="chassis" />
    <child link="left_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <xacro:wheel_transmission name="left_rear_wheel" />

  <!-- Add the right rear wheel with its joints and tranmissions -->

  <link name="right_rear_wheel">
    <inertial>
      <xacro:right_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:right_rear_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:right_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="right_rear_wheel_joint" type="continuous">
    <origin xyz="0 -0.1 0" rpy="1.5708 0 0" />
    <parent link="chassis" />
    <child link="right_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <xacro:wheel_transmission name="right_rear_wheel" />

  <!-- Add the left steering hinge with its joints and tranmissions -->

  <link name="left_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
    <visual>
      <xacro:left_steering_hinge_geometry />
      <material name="grey" />
    </visual>
  </link>

  <joint name="left_steering_hinge_joint" type="revolute">
    <origin xyz="0.325 0.1 0" rpy="0 1.5708 0" />
    <parent link="chassis" />
    <child link="left_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-1.0" upper="1.0" effort="10" velocity="100" />
  </joint>

  <xacro:steering_hinge_transmission name="left_steering_hinge" />

  <!-- Add the right steering hinge with its joints and tranmissions -->

  <link name="right_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
    <visual>
      <xacro:right_steering_hinge_geometry />
      <material name="grey" />
    </visual>
  </link>

  <joint name="right_steering_hinge_joint" type="continuous">
    <origin xyz="0.325 -0.1 0" rpy="0 1.5708 0" />
    <parent link="chassis" />
    <child link="right_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-1.0" upper="1.0" effort="10" velocity="100" />
  </joint>

  <xacro:steering_hinge_transmission name="right_steering_hinge" />

  <!-- Add the left front wheel with its joints and tranmissions -->

  <link name="left_front_wheel">
    <inertial>
      <xacro:left_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:left_front_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:left_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="left_front_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="1.5708 0 0" />
    <parent link="left_steering_hinge" />
    <child link="left_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <xacro:wheel_transmission name="left_front_wheel" />

  <!-- Add the left front wheel with its joints and tranmissions -->

  <link name="right_front_wheel">
    <inertial>
      <xacro:right_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:right_front_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:right_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="right_front_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="1.5708 0 0" />
    <parent link="right_steering_hinge" />
    <child link="right_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100"/>
  </joint>

  <xacro:wheel_transmission name="right_front_wheel" />

  <!-- Add Hokuyo laser scanner -->
<!--
  <link name="laser">
    <inertial>
      <xacro:hokuyo_inertial_params />
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://racecar_description/meshes/hokuyo.dae"/>
        <material name="grey" />
      </geometry>
    </visual>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="0.265 0.0 0.075" rpy="0 0 0"/>
    <parent link="chassis" />
    <child link="laser" />
    <axis xyz="0 0 1" />
  </joint>
-->
<!-- Camera
<xacro:include filename="$(find kinect_description)/urdf/kinect.urdf.xacro" />
-->

<link name="camera_link">
  <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  <collision name="collision">
    <geometry>
      <box size="0.073000 0.276000 0.072000" />
    </geometry>
  </collision>
  <visual name="visual">
    <geometry>
      <mesh filename="package://racecar_description/meshes/kinect.dae"/>
    </geometry>
  </visual>
  <sensor name="camera" type="depth">
    <update_rate>20</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>7</far>
          </clip>
        </camera>
        <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate.-->
          <updateRate>0.0</updateRate>
          <cameraName>camera_ir</cameraName>
          <imageTopicName>/camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
          <frameName>chassis</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>7.0</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </link>

    <joint name="depth_camera_joint" type="fixed">
      <origin xyz="0.390 0 0.04" rpy="0 0 0"/>
      <parent link="chassis"/>
      <child link="camera_link"/>
      <axis xyz="0 0 1" />
       <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0" />
    </joint>






    <!--
<xacro:kinect name="camera" parent="chassis">
  <origin xyz="-0.02 0 -0.04" rpy="0 -1.60 0" />
  <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1" />
</xacro:kinect>
-->

<!--   zed camera
  <link name="zed_camera_link">
  <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>

  <joint name="zed_camera_joint" type="fixed">
    <origin xyz="0.390 0 0.04" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="zed_camera_link"/>
    <axis xyz="0 0 1" />
     <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0" />
  </joint>


 zed camera lenses
 It seems these have to have a non-zero mass to have a camera attached?
  <link name="camera_link"><this needs to match the name in zed_wrapper/zed_tf.launch
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <link name="zed_camera_right_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="zed_camera_left_joint" type="fixed">
    <origin xyz="0 0.06 0" rpy="0 0 0"/>
    <parent link="zed_camera_link"/>
    <child link="camera_link"/>
    <axis xyz="0 0 1" />
  </joint>
  <joint name="zed_camera_right_joint" type="fixed">
    <origin xyz="0 -0.06 0" rpy="0 0 0"/>
    <parent link="zed_camera_link"/>
    <child link="zed_camera_right_link"/>
    <axis xyz="0 0 1" />
  </joint>
-->
  <!-- Add the remaining xacros -->

  <xacro:include filename="$(find racecar_description)/urdf/racecar.gazebo" />
  <xacro:include filename="$(find racecar_description)/urdf/materials.xacro" />
</robot>
